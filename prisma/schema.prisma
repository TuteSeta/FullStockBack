// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Articulo {
  codArticulo                       Int      @id @default(autoincrement())
  nombreArt                         String
  descripcion                       String
  demanda                           Int
  cantArticulo                      Int
  precioArticulo                    Float
  costoMantenimiento                Float
  desviacionDemandaLArticulo        Float
  desviacionDemandaTArticulo        Float
  nivelServicioDeseado              Float
  ultimaRevision                    DateTime?
  cgi                               Float?
  fechaHoraBajaArticulo             DateTime?
  createdAt                         DateTime @default(now())
  updatedAt                         DateTime @updatedAt
  articuloProveedores               ArticuloProveedor[]
  modeloInventarioIntervaloFijoCod  Int?
  modeloInventarioLoteFijoCod       Int?
  modeloInventarioIntervaloFijo     ModeloInventarioIntervaloFijo? @relation(fields: [modeloInventarioIntervaloFijoCod], references: [modeloInventarioIntervaloFijoCod])
  modeloInventarioLoteFijo          ModeloInventarioLoteFijo? @relation(fields: [modeloInventarioLoteFijoCod], references: [modeloInventarioLoteFijoCod])
  detalleOrdenCompra                DetalleOrdenCompra[]
  detalleVenta                      DetalleVenta[]
  codProveedorPredeterminado Int?
  proveedorPredeterminado    Proveedor? @relation("ProveedorPredeterminado", fields: [codProveedorPredeterminado], references: [codProveedor])
}

model ArticuloProveedor{

  cargoPedidoAP               Float
  demoraEntregaAP             Int
  costoUnitarioAP            Float
  codProveedor                Int
  codArticulo                 Int
  proveedor                   Proveedor @relation(fields: [codProveedor], references: [codProveedor])
  articulo                    Articulo  @relation(fields: [codArticulo], references: [codArticulo])
  @@unique([codArticulo, codProveedor])
}

model ModeloInventarioIntervaloFijo {
  modeloInventarioIntervaloFijoCod    Int @id @default(autoincrement()) 
  intervaloTiempo                     Int
  stockSeguridadIF                    Int
  inventarioMaximo                    Int
  cantidadPedido                      Int?
  articulos                           Articulo[] // RelaciÃ³nÂ inversa
}

model ModeloInventarioLoteFijo {
  modeloInventarioLoteFijoCod   Int @id @default(autoincrement()) 
  loteOptimo                    Int
  puntoPedido                   Int
  stockSeguridadLF              Int
  articulos                     Articulo[] // RelaciÃ³nÂ inversa
}

model Ventas {
  fechaVenta                    DateTime
  montoTotalVenta               Int
  cantidad                      Int
  nroVenta                      Int   @id @default(autoincrement()) 
  detalleVenta                  DetalleVenta[]
}

model DetalleVenta {
  montoDetalleVenta             Float
  nroRenglonDV                  Int   @id @default(autoincrement())
  precioUnitario                Float
  cantidad                      Int
  codArticulo                   Int
  nroVenta                      Int
  ventas                        Ventas @relation(fields: [nroVenta], references: [nroVenta], onDelete: Cascade)
  articulo                      Articulo   @relation(fields: [codArticulo], references: [codArticulo])
}

model Proveedor {
  codProveedor                  Int     @id @default(autoincrement())
  fechaHoraBajaProveedor        DateTime?
  nombreProveedorÂ               String
  articuloProveedores           ArticuloProveedor[]
  ordenCompra                   OrdenCompra[]
  articulosPredeterminados      Articulo[] @relation("ProveedorPredeterminado") // ðŸ‘ˆ CAMPO INVERSO

}

model OrdenCompra {
  nroOrdenCompra                Int @id @default(autoincrement())
  montoOrdenCompra              Float
  fechaHoraBajaOrdenCompra      DateTime?
  fechaCreacion                 DateTime @default(now())
  codProveedor                  Int
  proveedor                     Proveedor @relation(fields: [codProveedor], references: [codProveedor])
  codEstadoOrdenCompra          Int
  estadoOrdenCompra             EstadoOrdenCompra @relation(fields: [codEstadoOrdenCompra], references: [codEstadoOrdenCompra])
  detalleOrdenCompra            DetalleOrdenCompra[]
}

model EstadoOrdenCompra {
 codEstadoOrdenCompra           Int   @id @default(autoincrement())
 fechaHoraBajaEstadoOC          DateTime? 
 nombreEstadoOCÂ                 String @unique
 ordenCompra                    OrdenCompra[]
}

model DetalleOrdenCompra {
  montoDOC                      Float
  nroRenglonDOC                 Int @id @default(autoincrement())
  cantidadDOC                   Int
  nroOrdenCompra                Int 
  ordenCompra                   OrdenCompra @relation(fields: [nroOrdenCompra], references: [nroOrdenCompra])
  codArticulo                   Int
  articulo                      Articulo @relation(fields: [codArticulo], references: [codArticulo])
}